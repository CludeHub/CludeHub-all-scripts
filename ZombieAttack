local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Zombie Attack", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})
local Tab = Window:MakeTab({
	Name = "Combat",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
Tab:AddButton({
	Name = "Auto Farm",
	Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/YellowGreg/RobloxScripts/main/Zombie-Attack/Auto-Farm.lua"))()
      		print("button pressed")
  	end    
})
Tab:AddButton({
	Name = "Silent Aim",
	Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/YellowGreg/RobloxScripts/main/Zombie-Attack/Silent-Aim.lua"))()
      		print("button pressed")
  	end    
})
Tab:AddButton({
	Name = "God mode",
	Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/YellowGreg/RobloxScripts/main/Zombie-Attack/God-Mode.lua"))()
      		print("button pressed")
  	end    
})
Tab:AddButton({
	Name = "Hitbox",
	Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/YellowGreg/RobloxScripts/main/Zombie-Attack/Extended-Hitbox.lua"))()
      		print("button pressed")
  	end    
})
Tab:AddButton({
	Name = "kill in platform",
	Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/YellowGreg/RobloxScripts/main/Zombie-Attack/Kill-In-Platform.lua"))()
      		print("button pressed")
  	end    
})
local Tab = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
Tab:AddButton({
	Name = "day",
	Callback = function()
loadstring(game:HttpGet("https://pastebin.com/raw/7Rvxepux"))()
      		print("button pressed")
  	end    
})
Tab:AddButton({
	Name = "night",
	Callback = function()
game.Lighting:SetMinutesAfterMidnight(0)
      		print("button pressed")
  	end    
})
local Tab = Window:MakeTab({
	Name = "Player",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
Tab:AddTextbox({
	Name = "Set Speed",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
		print(Value)
	end	  
})
Tab:AddTextbox({
	Name = "Set Jump Power",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
		print(Value)
	end	  
})
Tab:AddTextbox({
	Name = "Set Gravity",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
if Value == "" then
	Value = "200"
	else
	game.Workspace.Gravity = Value
	end
		print(Value)
	end	  
})
Tab:AddTextbox({
	Name = "Set Fov",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
if Value == "" then
		Value = "70"
		end
		game:GetService("Workspace").CurrentCamera.FieldOfView = Value -- Set it to the default value (70 is the default FOV)
		print(Value)
	end	  
})
--Subscribe To Clude--
-- If Any Error Happened Let me Know--

--// Setting \--
local range = 98766532346790876543211234567890987654322234457889876543322334568997644334689876543234578987665422344689875323579653308765433356899754568099866653335789766609

--// Variable \--
local player = game:GetService("Players").LocalPlayer

--// Script \--
game:GetService("RunService").RenderStepped:Connect(function()
    local p = game.Players:GetPlayers()
    for i = 2, #p do local v = p[i].Character
        if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and player:DistanceFromCharacter(v.HumanoidRootPart.Position) <= range then
            local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
            if tool and tool:FindFirstChild("Handle") then
                tool:Activate()
                for i,v in next, v:GetChildren() do
                    if v:IsA("BasePart") then
                        firetouchinterest(tool.Handle,v,0)
                        firetouchinterest(tool.Handle,v,1)
                    end
                end
            end
        end
    end
end)
